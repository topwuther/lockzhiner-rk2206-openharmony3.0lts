# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/faultloggerd/faultloggerd.gni")
import("//build/ohos.gni")

config("processdump_config") {
  visibility = [ ":*" ]

  include_dirs = [
    ".",
    "//base/hiviewdfx/faultloggerd/common",
    "//utils/native/base/include",
  ]
}

ohos_source_set("process_info_src") {
  if (use_musl) {
    cflags = [ "-DDFX_LOCAL_UNWIND" ]
  }

  configs = [ ":processdump_config" ]
  sources = [
    "dfx_dump_writer.c",
    "dfx_elf.c",
    "dfx_frames.c",
    "dfx_log.c",
    "dfx_maps.c",
    "dfx_process.c",
    "dfx_signal.c",
    "dfx_thread.c",
    "dfx_util.c",
  ]

  if (target_cpu == "arm") {
    sources += [ "dfx_regs_arm.c" ]
  } else if (target_cpu == "arm64") {
    sources += [ "dfx_regs_arm64.c" ]
  } else if (target_cpu == "x86_64") {
    sources += [ "dfx_regs_x86_64.c" ]
  }

  deps = [
    "$faultloggerd_path/interfaces/innerkits/faultloggerd_client:libfaultloggerd",
    "//utils/native/base:utils",
  ]

  external_deps = [ "hilog_native:libhilog" ]
}

ohos_executable("processdump") {
  install_enable = true
  configs = [ ":processdump_config" ]
  sources = [
    "dfx_dump_writer.c",
    "dfx_elf.c",
    "dfx_frames.c",
    "dfx_log.c",
    "dfx_maps.c",
    "dfx_process.c",
    "dfx_signal.c",
    "dfx_thread.c",
    "dfx_unwind_remote.c",
    "dfx_util.c",
    "main.c",
    "process_dump.c",
  ]

  if (target_cpu == "arm") {
    sources += [ "dfx_regs_arm.c" ]
  } else if (target_cpu == "arm64") {
    sources += [ "dfx_regs_arm64.c" ]
  } else if (target_cpu == "x86_64") {
    sources += [ "dfx_regs_x86_64.c" ]
  }

  deps = [
    "$faultloggerd_path/interfaces/innerkits/faultloggerd_client:libfaultloggerd",
    "//third_party/libunwind:libunwind",
    "//utils/native/base:utils",
  ]

  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  part_name = "faultloggerd"
  subsystem_name = "hiviewdfx"
}
