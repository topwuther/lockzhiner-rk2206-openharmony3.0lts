# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/notification/ans_standard/notification.gni")
import("//build/ohos.gni")

group("ans_targets") {
  deps = [ ":libans" ]
}

config("public_ans_config") {
  include_dirs = [
    "${services_path}/ans/include",
    "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
  ]
  defines = [
    "APP_LOG_TAG = \"Ans\"",
    "LOG_DOMAIN = 0xD002200",
  ]
}

ohos_shared_library("libans") {
  include_dirs = [ "include" ]

  sources = [
    "src/advanced_notification_service.cpp",
    "src/advanced_notification_service_ability.cpp",
    "src/bundle_manager_helper.cpp",
    "src/disturb_filter.cpp",
    "src/notification_preferences.cpp",
    "src/notification_preferences_database.cpp",
    "src/notification_preferences_info.cpp",
    "src/notification_slot_filter.cpp",
    "src/notification_subscriber_manager.cpp",
    "src/permission_filter.cpp",
    "src/system_event_observer.cpp",
  ]

  configs = [
    ":public_ans_config",
    "//utils/native/base:utils_config",
  ]

  deps = [
    "${core_path}:ans_core",
    "${frameworks_path}/ans/native:ans_innerkits",
    "${frameworks_path}/wantagent:wantagent_innerkits",
    "//foundation/aafwk/standard/services/abilitymgr:abilityms",
    "//foundation/distributeddatamgr/distributeddatamgr/interfaces/innerkits/distributeddata:distributeddata_inner",
    "//foundation/multimedia/image_standard/interfaces/innerkits:image_native",
    "//utils/native/base:utils",
  ]

  if (is_double_framework) {
    cflags = [ "-DCONFIG_DUAL_FRAMEWORK" ]
  }

  external_deps = []
  external_deps += ans_standard_external_deps

  subsystem_name = "notification"
  part_name = "ans_standard"
}
