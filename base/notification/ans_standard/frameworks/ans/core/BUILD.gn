# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//base/notification/ans_standard/notification.gni")
import("//build/ohos.gni")

group("ans_core_target") {
  deps = [ ":ans_core" ]
}

config("private_config") {
  include_dirs = [ "//utils/system/safwk/native/include" ]
}

config("public_ans_core_config") {
  include_dirs = [
    "${core_path}/common/include",
    "${core_path}/include",
    "${interfaces_path}/innerkits/ans/native/include",
    "${interfaces_path}/innerkits/wantAgent/include",
    "//foundation/multimedia/image_standard/interfaces/innerkits/include",
    "//utils/native/base/include",
    "//third_party/jsoncpp/include",
  ]
}

ohos_shared_library("ans_core") {
  sources = [
    "${core_path}/common/src/ans_log_wrapper.cpp",
    "${core_path}/src/ans_manager_death_recipient.cpp",
    "${core_path}/src/ans_manager_proxy.cpp",
    "${core_path}/src/ans_manager_stub.cpp",
    "${core_path}/src/ans_notification.cpp",
    "${core_path}/src/ans_subscriber_proxy.cpp",
    "${core_path}/src/ans_subscriber_stub.cpp",
    "${frameworks_path}/ans/native/src/message_user.cpp",
    "${frameworks_path}/ans/native/src/notification.cpp",
    "${frameworks_path}/ans/native/src/notification_action_button.cpp",
    "${frameworks_path}/ans/native/src/notification_basic_content.cpp",
    "${frameworks_path}/ans/native/src/notification_bundle_option.cpp",
    "${frameworks_path}/ans/native/src/notification_constant.cpp",
    "${frameworks_path}/ans/native/src/notification_content.cpp",
    "${frameworks_path}/ans/native/src/notification_conversational_content.cpp",
    "${frameworks_path}/ans/native/src/notification_conversational_message.cpp",
    "${frameworks_path}/ans/native/src/notification_helper.cpp",
    "${frameworks_path}/ans/native/src/notification_long_text_content.cpp",
    "${frameworks_path}/ans/native/src/notification_media_content.cpp",
    "${frameworks_path}/ans/native/src/notification_multiline_content.cpp",
    "${frameworks_path}/ans/native/src/notification_normal_content.cpp",
    "${frameworks_path}/ans/native/src/notification_picture_content.cpp",
    "${frameworks_path}/ans/native/src/notification_request.cpp",
    "${frameworks_path}/ans/native/src/notification_slot.cpp",
    "${frameworks_path}/ans/native/src/notification_slot_group.cpp",
    "${frameworks_path}/ans/native/src/notification_sorting.cpp",
    "${frameworks_path}/ans/native/src/notification_sorting_map.cpp",
    "${frameworks_path}/ans/native/src/notification_subscribe_info.cpp",
    "${frameworks_path}/ans/native/src/notification_subscriber.cpp",
    "${frameworks_path}/ans/native/src/notification_user_input.cpp",
  ]

  configs = [ ":private_config" ]

  public_configs = [ ":public_ans_core_config" ]

  deps = [
    "${frameworks_path}/wantagent:wantagent_innerkits",
    "//foundation/aafwk/standard/interfaces/innerkits/want:want",
    "//foundation/distributedschedule/dmsfwk/interfaces/innerkits/uri:zuri",
    "//foundation/multimedia/image_standard/interfaces/innerkits:image_native",
    "//third_party/jsoncpp:jsoncpp",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_L2:samgr_proxy",
  ]

  part_name = "ans_standard"
  subsystem_name = "notification"
}
