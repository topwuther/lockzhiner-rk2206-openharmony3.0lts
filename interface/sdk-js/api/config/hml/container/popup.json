{
  "name": "popup",
  "version": [
    {
      "name": "v3.0"
    }
  ],
  "supportedDevices": ["phone", "tablet"],
  "description": [
    {
      "name": "The <popup> component is used to display a pop-up to instruct user operations after a user clicks a bound control.",
      "supportedDevices": ["phone", "tablet"]
    }
  ],
  "attributes": [
    {
      "name": "target",
      "supportedDevices": ["phone", "tablet"],
      "required": true,
      "description": [
        {
          "name": "ID of the target element. Dynamic switch is not supported.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "placement",
      "supportedDevices": ["phone", "tablet"],
      "required": true,
      "description": [
        {
          "name": "Position of the popup. Available values are as follows: left: The pop-up is displayed on the left of the target item. right: The pop-up is displayed on the right of the target item. top: The pop-up is displayed at the top of the target item. bottom: The pop-up is displayed at the bottom of the target item. topLeft: The pop-up is displayed on the upper left of the target item. topRight: The pop-up is displayed on the upper right of the target item. bottomLeft: The pop-up is displayed on the bottom left of the target item. bottomRight: The pop-up is displayed on the bottom right of the target item.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "left",
          "supportedDevices": ["phone", "tablet"]
        },
        {
          "name": "right",
          "supportedDevices": ["phone", "tablet"]
        },
        {
          "name": "top",
          "supportedDevices": ["phone", "tablet"]
        },
        {
          "name": "bottom",
          "supportedDevices": ["phone", "tablet"]
        },
        {
          "name": "topLeft",
          "supportedDevices": ["phone", "tablet"]
        },
        {
          "name": "topRight",
          "supportedDevices": ["phone", "tablet"]
        },
        {
          "name": "bottomLeft",
          "supportedDevices": ["phone", "tablet"]
        },
        {
          "name": "bottomRight",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "id",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Unique ID of a component.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "style",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Style declaration of a component.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "class",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Style class of a component, which is used to refer to a style table.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "ref",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Used to register reference information for elements or child components. The reference information is registered with the parent component on $refs.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "disabled",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Whether the component is disabled. If the component is disabled, the component cannot respond to user interaction.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "data",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Attribute set for components to facilitate data storage and reading.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "accessibilitygroup",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Accessibility group. If this attribute is set to true, the component and all its child components form an entire selectable component, and the accessibility service will no longer available for the content of its child components.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "accessibilitytext",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Accessibility text. If a component does not contain text information, it will not be read when the component is selected by the screen reader. In this case, the screen reader user cannot know which component is selected. To solve this problem, you can set this attribute for components without text information. When the component is selected by the screen reader, the specified accessibility text will be read, informing the user which component is selected. If a component with this attribute set contains text information, only the accessibility text will be read.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "accessibilitydescription",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Accessibility description. You can specify further explanation of the current component, for example, possible operation consequences, especially those cannot be learned from component attributes and accessibility text. You can set a detailed description text for the attribute of the component to help users understand the operation to be performed. If a component contains both text information and the accessibility description, the text is read first and then the accessibility description, when the component is selected.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "accessibilityimportance",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Accessibility importance, which is used to decide whether a component can be identified by the accessibility service. The value can be auto, yes, no, or no-hide-descendants. The last value forces the screen reader to ignore the current component and all its subcomponents. yes: The current component is selectable for the accessibility service. no: The current component is not selectable for the accessibility service.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "for",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Expands the current element based on the configured data list.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "tid",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "The tid attribute is used to accelerate the for loop. It is used to improve the re-rendering efficiency when data in a loop changes. The tid attribute specifies the unique ID of each element in the array. If it is not specified, the index of each element in the array is used as the ID. For example, tid='id' indicates that the id attribute of each element is its unique identifier.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "string"
    },
    {
      "name": "if",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Whether the element is added or removed.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "elif",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    },
    {
      "name": "else",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [],
      "type": "string"
    },
    {
      "name": "show",
      "supportedDevices": ["phone", "tablet"],
      "required": false,
      "description": [
        {
          "name": "Whether the element is displayed or hidden.",
          "supportedDevices": ["phone", "tablet"]
        }
      ],
      "type": "enum",
      "options": [
        {
          "name": "true"
        },
        {
          "name": "false"
        }
      ]
    }
  ],
  "events": [
    {
      "name": "touchstart",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Triggered when the tapping starts.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "touchmove",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Triggered when the tapping moves.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "touchcancel",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Triggered when the tapping is interrupted.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "touchend",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Triggered when the tapping ends.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "click",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Triggered when a component is clicked.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "longpress",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Triggered when a component is long pressed.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "accessibility",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Event dispatched by the accessibility service.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "blur",
      "supportedDevices": ["phone", "tablet"],
      "description": [
        {
          "name": "Triggered when the component loses focus. The <span> component cannot lose focus.",
          "supportedDevices": ["phone", "tablet"]
        }
      ]
    },
    {
      "name": "attached",
      "supportedDevices": ["phone", "tablet", "tv", "wearable"],
      "description": [
        {
          "name": "The event will be called when the render node is attached on the tree.",
          "supportedDevices": ["phone", "tablet", "tv", "wearable"]
        }
      ]
    },
    {
      "name": "detached",
      "supportedDevices": ["phone", "tablet", "tv", "wearable"],
      "description": [
        {
          "name": "The event will be called when the render node is detached on the tree.",
          "supportedDevices": ["phone", "tablet", "tv", "wearable"]
        }
      ]
    }
  ],
  "supportedSubComponents": true,
  "supportedSubComponentsRestriction": [],
  "unSupportSubComponentsRestriction": [],
  "parentComponentsRestriction": []
}
