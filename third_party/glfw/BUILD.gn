# Copyright (c) Huawei Technologies Co., Ltd. 2021-2021. All rights reserved.

import("//build/config/ohos/rules.gni")
import("//build/ohos.gni")
import("//third_party/glfw/glfw_ace_config.gni")

config("glfw_inner_headers") {
  include_dirs = [ "include" ]
}

config("glfw_config_mac") {
  cflags = [ "-Wno-sign-compare" ]
}

template("glfw") {
  forward_variables_from(invoker, "*")

  ohos_static_library(target_name) {
    defines += invoker.defines
    include_dirs = [ "src" ]
    public = [
      "include/GLFW/glfw3.h",
      "include/GLFW/glfw3native.h",
    ]

    sources = [
      "src/context.c",
      "src/init.c",
      "src/input.c",
      "src/monitor.c",
      "src/vulkan.c",
      "src/window.c",
    ]

    public_configs = [ ":glfw_inner_headers" ]

    if (platform == "windows") {
      sources += [
        "src/egl_context.c",
        "src/egl_context.h",
        "src/wgl_context.c",
        "src/wgl_context.h",
        "src/win32_init.c",
        "src/win32_joystick.c",
        "src/win32_joystick.h",
        "src/win32_monitor.c",
        "src/win32_platform.h",
        "src/win32_time.c",
        "src/win32_tls.c",
        "src/win32_window.c",
      ]

      defines += [ "_GLFW_WIN32" ]
    }
    if (platform == "mac") {
      sources += [
        "deps/glad.c",
        "src/cocoa_init.m",
        "src/cocoa_joystick.h",
        "src/cocoa_joystick.m",
        "src/cocoa_monitor.m",
        "src/cocoa_platform.h",
        "src/cocoa_time.c",
        "src/cocoa_window.m",
        "src/nsgl_context.h",
        "src/nsgl_context.m",
        "src/posix_tls.c",
        "src/posix_tls.h",
      ]
      include_dirs += [ "deps" ]
      libs = [
        "Cocoa.framework",
        "IOKit.framework",
        "CoreFoundation.framework",
        "CoreVideo.framework",
      ]
      cflags = [
        "-Wno-deprecated-declarations",
        "-Wno-objc-multiple-method-names",
      ]
      public_configs += [ ":glfw_config_mac" ]
      defines += [ "_GLFW_COCOA" ]
    }
  }
}

glfw("glfw_windows") {
  defines = ace_windows_defines
  platform = "windows"
}

glfw("glfw_mac") {
  defines = ace_mac_defines
  platform = "mac"
}
