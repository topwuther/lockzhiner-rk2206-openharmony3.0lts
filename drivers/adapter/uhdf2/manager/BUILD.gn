# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")

ohos_executable("hdf_devmgr") {
  include_dirs = [
    "//utils/native/base/include",
    "$hdf_framework_path/core/manager/include",
    "$hdf_framework_path/core/common/include/manager/",
    "$hdf_framework_path/core/host/include",
    "$hdf_framework_path/core/shared/include",
    "$hdf_framework_path/include/osal",
    "$hdf_framework_path/include/utils",
    "$hdf_framework_path/utils/include",
    "$hdf_framework_path/include/core",
    "$hdf_framework_path/include/config",
    "$hdf_framework_path/ability/sbuf/include",
    "$hdf_framework_path/ability/config/hcs_parser/include",
    "$hdf_framework_path/model/usb/include",
    "$hdf_uhdf_path/ipc/include",
    "$hdf_uhdf_path/osal/include/",
    "$hdf_uhdf_path/include/config",
    "$hdf_uhdf_path/include/osal",
    "$hdf_uhdf_path/include/host",
    "$hdf_uhdf_path/shared/include",
    "$hdf_uhdf_path/manager/include",
    "$hdf_uhdf_path/host/include",
    "$hdf_uhdf_path/security/include",
    "include",
  ]

  sources = [
    "$hdf_framework_path/core/manager/src/devhost_service_clnt.c",
    "$hdf_framework_path/core/manager/src/device_token_clnt.c",
    "$hdf_framework_path/core/manager/src/devmgr_service.c",
    "$hdf_framework_path/core/manager/src/devsvc_manager.c",
    "$hdf_framework_path/core/manager/src/hdf_driver_installer.c",
    "$hdf_framework_path/core/manager/src/hdf_host_info.c",
    "$hdf_framework_path/core/shared/src/hdf_device_info.c",
    "$hdf_framework_path/core/shared/src/hdf_object_manager.c",
    "$hdf_framework_path/core/shared/src/hdf_service_record.c",
    "$hdf_framework_path/model/usb/src/usb_ddk_pnp_loader.c",
    "$hdf_uhdf_path/shared/src/dev_attribute_parcel.c",
    "$hdf_uhdf_path/shared/src/hdf_attribute_full.c",
    "$hdf_uhdf_path/shared/src/hdf_device_info_full.c",
    "device_manager.c",
    "src/devhost_service_proxy.c",
    "src/device_token_proxy.c",
    "src/devmgr_object_config.c",
    "src/devmgr_pnp_service.c",
    "src/devmgr_query_device.c",
    "src/devmgr_service_full.c",
    "src/devmgr_service_stub.c",
    "src/devmgr_virtual_service.c",
    "src/devsvc_manager_stub.c",
    "src/driver_installer_full.c",
    "src/hdf_get_attribute.c",
    "src/usb_pnp_manager.c",
  ]

  deps = [
    "$hdf_uhdf_path/config:uhdf_hcs_pkg",
    "$hdf_uhdf_path/ipc:libhdf_ipc_adapter",
    "$hdf_uhdf_path/osal:libhdf_utils",
    "//utils/native/base:utils",
  ]

  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
  ]

  # install_images = [ "vendor" ]
  install_enable = true
  subsystem_name = "hdf"
  part_name = "hdf"
}

ohos_prebuilt_etc("hdf_devmgr.rc") {
  if (use_musl) {
    source = "hdf_devmgr.cfg"
  } else {
    source = "hdf_devmgr.rc"
  }
  relative_install_dir = "init"
  subsystem_name = "hdf"
  part_name = "hdf"
}
