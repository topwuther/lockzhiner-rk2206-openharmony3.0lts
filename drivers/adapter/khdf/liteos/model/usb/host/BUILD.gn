# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//drivers/adapter/khdf/liteos/hdf.gni")

module_switch = defined(LOSCFG_DRIVERS_HDF_USB_DDK_HOST)
module_name = "hdf_usb_ddk_host"
hdf_driver(module_name) {
  PERIPHERAL_USB_DDK_HOST = "$HDF_PERIPHERAL_PATH/usb/ddk/host"
  sources = [
    "$PERIPHERAL_USB_DDK_HOST/src/liteos_adapter.c",
    "$PERIPHERAL_USB_DDK_HOST/src/usb_raw_api.c",
    "$PERIPHERAL_USB_DDK_HOST/src/usb_raw_api_library.c",
    "$PERIPHERAL_USB_DDK_HOST/src/usb_protocol.c",
    "$PERIPHERAL_USB_DDK_HOST/src/usb_io_manage.c",
    "$PERIPHERAL_USB_DDK_HOST/src/usb_interface_pool.c",
  ]
  include_dirs = []
  if (defined(LOSCFG_DRIVERS_HDF_USB_PNP_NOTIFY)) {
    USB_PNP_NOTIFY_SHARED_ROOT = "$HDF_FRAMEWORKS_PATH/core/shared"
    FRAMEWORKS_USB_DDK_HOST = "$HDF_FRAMEWORKS_PATH/model/usb"
    sources += [
      "src/usb_pnp_notify.c",
      "src/usb_pnp_manager.c",
      "$FRAMEWORKS_USB_DDK_HOST/src/usb_ddk_pnp_loader.c",
      "src/usb_test_pnp_notify.c",
    ]
    include_dirs += [
      "$USB_PNP_NOTIFY_SHARED_ROOT/include",
    ]
    public_configs = [ ":public" ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_USB_HOST_SERIAL)) {
    FRAMEWORKS_USB_SERIAL_ROOT = "$HDF_PERIPHERAL_PATH/usb/serial"
    sources += [
      "$FRAMEWORKS_USB_SERIAL_ROOT/src/usb_serial.c",
    ]
    include_dirs += [
      "$FRAMEWORKS_USB_SERIAL_ROOT/../gadget/function/include",
      "$FRAMEWORKS_USB_SERIAL_ROOT/include",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_USB_HOST_SERIAL_RAW)) {
    FRAMEWORKS_USB_SERIAL_RAW_ROOT = "$HDF_PERIPHERAL_PATH/usb/serial"
    sources += [
      "$FRAMEWORKS_USB_SERIAL_RAW_ROOT/src/usb_serial_rawapi.c",
    ]
    include_dirs += [
      "$FRAMEWORKS_USB_SERIAL_RAW_ROOT/../gadget/function/include",
      "$FRAMEWORKS_USB_SERIAL_RAW_ROOT/include",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_USB_HOST_NET)) {
    FRAMEWORKS_USB_NET_ROOT = "$HDF_PERIPHERAL_PATH/usb/net"
    sources += [
      "$FRAMEWORKS_USB_NET_ROOT/src/cdc_ether.c",
    ]
    include_dirs += [
      "$FRAMEWORKS_USB_NET_ROOT/../serial/include",
      "$FRAMEWORKS_USB_NET_ROOT/../gadget/function/include",
      "$FRAMEWORKS_USB_NET_ROOT/include",
    ]
  }

  include_dirs += [
    "$PERIPHERAL_USB_DDK_HOST/../../interfaces/ddk/common",
    "$PERIPHERAL_USB_DDK_HOST/../../interfaces/ddk/host",
    "$PERIPHERAL_USB_DDK_HOST/include",
  ]

  if (defined(LOSCFG_DRIVERS_HDF_USB_HOST_SDK_API_SPEED)) {
    FRAMEWORKS_USB_SDK_API_SPEED_ROOT = "$HDF_PERIPHERAL_PATH/usb/sample/host/liteos_test"
    sources += [
      "$FRAMEWORKS_USB_SDK_API_SPEED_ROOT/src/usbhost_sdkapi_speed.c",
    ]
    include_dirs += [
      "$FRAMEWORKS_USB_SDK_API_SPEED_ROOT/../../../serial/include",
      "$FRAMEWORKS_USB_SDK_API_SPEED_ROOT/../../../gadget/function/include",
      "$FRAMEWORKS_USB_SDK_API_SPEED_ROOT/include",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_USB_HOST_SDK_RAW_SPEED)) {
    FRAMEWORKS_USB_SDK_RAW_SPEED_ROOT = "$HDF_PERIPHERAL_PATH/usb/sample/host/liteos_test"
    sources += [
      "$FRAMEWORKS_USB_SDK_RAW_SPEED_ROOT/src/usbhost_sdkraw_speed.c",
    ]
    include_dirs += [
      "$FRAMEWORKS_USB_SDK_RAW_SPEED_ROOT/../../../serial/include",
      "$FRAMEWORKS_USB_SDK_RAW_SPEED_ROOT/../../../gadget/function/include",
      "$FRAMEWORKS_USB_SDK_RAW_SPEED_ROOT/include",
    ]
  }

  if (defined(LOSCFG_DRIVERS_HDF_USB_HOST_NO_SDK_SPEED)) {
    FRAMEWORKS_USB_NO_SDK_SPEED_ROOT = "$HDF_PERIPHERAL_PATH/usb/sample/host/liteos_test"
    sources += [
      "$FRAMEWORKS_USB_NO_SDK_SPEED_ROOT/src/usbhost_nosdk_speed.c",
    ]
    include_dirs += [
      "$FRAMEWORKS_USB_NO_SDK_SPEED_ROOT/../../../serial/include",
      "$FRAMEWORKS_USB_NO_SDK_SPEED_ROOT/../../../gadget/function/include",
      "$FRAMEWORKS_USB_NO_SDK_SPEED_ROOT/include",
    ]
  }
}

config("public") {
  include_dirs = [
    "include",
    "$HDF_FRAMEWORKS_PATH/model/usb/include",
  ]
}
