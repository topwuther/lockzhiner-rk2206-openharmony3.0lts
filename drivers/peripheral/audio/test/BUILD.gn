# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

module_output_path = "hdf/audio/unittest/adm"
ohos_unittest("hdf_audio_adm_test") {
  module_out_path = module_output_path

  include_dirs = [
    "//drivers/framework/ability/sbuf/include",
    "//drivers/framework/include/platform",
    "//drivers/framework/include/core",
    "//drivers/framework/include/osal",
    "//drivers/adapter/uhdf/posix/include",
    "//drivers/framework/include/utils",
    "//drivers/framework/include/config",
    "//drivers/framework/include",
    "//drivers/framework/test/unittest/include",
    "//drivers/framework/test/unittest/osal",
    "//drivers/framework/test/unittest/model/audio/include",
    "//drivers/framework/model/audio/core/test/unittest/common",
  ]

  defines = [ "__USER__" ]
  sources = [
    "//drivers/framework/model/audio/core/test/unittest/common/audio_core_test.cpp",
    "//drivers/framework/model/audio/core/test/unittest/common/audio_host_test.cpp",
    "//drivers/framework/model/audio/core/test/unittest/common/audio_parse_test.cpp",
    "//drivers/framework/model/audio/dispatch/test/unittest/common/audio_stream_dispatch_test.cpp",
    "//drivers/framework/model/audio/sapm/test/unittest/common/audio_sapm_test.cpp",
  ]
  deps = [
    "//drivers/adapter/uhdf2/osal:libhdf_utils",
    "//drivers/adapter/uhdf2/test/unittest/common:libhdf_test_common",
    "//utils/native/base:utils",
  ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]
  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
}

group("hdf_test_audio") {
  testonly = true
  deps = [ ":hdf_audio_adm_test" ]
}
