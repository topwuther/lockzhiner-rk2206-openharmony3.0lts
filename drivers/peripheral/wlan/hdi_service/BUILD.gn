# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")

FWK_ROOT_DIR = "//drivers/framework"

ohos_shared_library("wifi_hdi_device") {
  output_name = "wifi_hdi_device"
  sources = [
    "client/wlan_hal_proxy.cpp",
    "services/wlan_hdi_drivers.c",
    "services/wlan_hdi_service_stub.c",
  ]

  include_dirs = [
    "include",
    "//drivers/peripheral/wlan/interfaces/include",
    "//drivers/peripheral/wlan/client/include",
    "//drivers/peripheral/wlan/hal/include",
    "//drivers/peripheral/wlan/hdi_service/include",
    "//drivers/peripheral/wlan/hdi_service/services",
    "$FWK_ROOT_DIR/core/shared/include",
    "$FWK_ROOT_DIR/include",
    "$FWK_ROOT_DIR/include/wifi",
    "$FWK_ROOT_DIR/include/core",
    "$FWK_ROOT_DIR/include/utils",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//drivers/adapter/uhdf2/shared/include",
    "//drivers/adapter/uhdf2/include/host",
  ]

  deps = [
    "$hdf_uhdf_path/hdi:libhdi",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//drivers/adapter/uhdf2/ipc:libhdf_ipc_adapter",
    "//drivers/adapter/uhdf2/osal:libhdf_utils",
    "//drivers/peripheral/wlan/client:wifi_driver_client",
    "//drivers/peripheral/wlan/hal:wifi_hal",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//utils/native/base:utils",
  ]

  defines = [ "__OHOS__USER__" ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]

  subsystem_name = "hdf"
  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
}

ohos_shared_library("wifi_hdi_c_device") {
  output_name = "wifi_hdi_c_device"
  sources = [
    "client/wlan_hal_c_proxy.c",
    "services/wlan_hdi_drivers.c",
    "services/wlan_hdi_service_stub.c",
  ]

  include_dirs = [
    "include",
    "//drivers/peripheral/wlan/interfaces/include",
    "//drivers/peripheral/wlan/client/include",
    "//drivers/peripheral/wlan/hal/include",
    "//drivers/peripheral/wlan/hdi_service/include",
    "//drivers/peripheral/wlan/hdi_service/services",
    "$FWK_ROOT_DIR/core/shared/include",
    "$FWK_ROOT_DIR/include",
    "$FWK_ROOT_DIR/include/wifi",
    "$FWK_ROOT_DIR/include/core",
    "$FWK_ROOT_DIR/include/utils",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    "//drivers/adapter/uhdf2/shared/include",
    "//drivers/adapter/uhdf2/include/host",
  ]

  deps = [
    "$hdf_uhdf_path/hdi:libhdi",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//drivers/adapter/uhdf2/ipc:libhdf_ipc_adapter",
    "//drivers/adapter/uhdf2/osal:libhdf_utils",
    "//drivers/peripheral/wlan/client:wifi_driver_client",
    "//drivers/peripheral/wlan/hal:wifi_hal",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//utils/native/base:utils",
  ]

  defines = [ "__OHOS__USER__" ]

  cflags = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-fsigned-char",
    "-fno-common",
    "-fno-strict-aliasing",
  ]

  subsystem_name = "hdf"
  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
}
