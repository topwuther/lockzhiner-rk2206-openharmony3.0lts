# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")
import("../../camera.gni")

module_output_path = "hdf/hdi_impl_test"

config("camhdi_impl_utest_config") {
  visibility = [ ":*" ]
  cflags_cc = [
    "-Wall",
    "-Wextra",
    "-Werror",
    "-Wno-error",
    "-DGST_DISABLE_DEPRECATED",
    "-DHAVE_CONFIG_H",
    "-DCOLORSPACE=\"videoconvert\"",
    "-fno-strict-aliasing",
    "-Wno-sign-compare",
    "-Wno-builtin-requires-header",
    "-Wno-unused-variable",
    "-Wno-unused-label",
    "-Wno-implicit-function-declaration",
    "-Wno-format",
    "-Wno-int-conversion",
    "-Wno-unused-function",
    "-Wno-thread-safety-attributes",
    "-Wno-inconsistent-missing-override",
    "-fno-rtti",
    "-fno-exceptions",
    "-ffunction-sections",
    "-fdata-sections",
  ]
}

ohos_unittest("hdi_impl_unittest") {
  testonly = true
  module_out_path = module_output_path
  sources = [
    "unittest/utest_camera_device_impl.cpp",
    "unittest/utest_camera_hdi_base.cpp",
    "unittest/utest_camera_host_impl.cpp",
    "unittest/utest_stream_operator_impl.cpp",
  ]

  include_dirs = [
    "//third_party/googletest/googletest/include/gtest",
    "$camera_path/test/unittest",
    "$camera_path/../interfaces/include",
    "$camera_path/../interfaces/include/client",
    "$camera_path/../interfaces/include/server",
    "$camera_path/../interfaces/include/callback/host",
    "$camera_path/../interfaces/include/callback/device",
    "$camera_path/../interfaces/include/callback/operator",
    "$camera_path/include",
    "$camera_path/hdi_impl",
    "$camera_path/hdi_impl/include",
    "$camera_path/hdi_impl/include/camera_host",
    "$camera_path/hdi_impl/include/camera_device",
    "$camera_path/hdi_impl/include/stream_operator",
    "$camera_path/hdi_impl/include/offline_stream_operator",
    "$camera_path/device_manager/include/",
    "$camera_path/device_manager/include/mpi",
    "//base/hiviewdfx/interfaces/innerkits/libhilog/include",
    "$camera_path/utils/event",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata/include",

    #producer
    "//utils/native/base/include",
    "//foundation/communication/ipc/ipc/native/src/core/include",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core/include",
    "$camera_path/pipeline_core/utils",
    "$camera_path/pipeline_core/include",
    "$camera_path/pipeline_core/host_stream/include",
    "$camera_path/pipeline_core/nodes/include",
    "$camera_path/pipeline_core/nodes/src/node_base",
    "$camera_path/pipeline_core/nodes/src/dummy_node",
    "$camera_path/pipeline_core/pipeline_impl/src/strategy/config",
    "$camera_path/pipeline_core/pipeline_impl/include",
    "$camera_path/pipeline_core/pipeline_impl/src",
    "$camera_path/pipeline_core/pipeline_impl/src/builder",
    "$camera_path/pipeline_core/pipeline_impl/src/dispatcher",
    "$camera_path/pipeline_core/pipeline_impl/src/parser",
    "$camera_path/pipeline_core/pipeline_impl/src/strategy",
    "$camera_path/pipeline_core/ipp/include",

    # HCS
    "//drivers/framework/include/config",
    "//drivers/framework/include/osal",
    "//drivers/framework/include/utils",
    "//drivers/adapter/uhdf2/include/config",
    "//drivers/framework/ability/config/hcs_parser/include",
    "//system/core/include/cutils",
    "//drivers/adapter/uhdf2/osal/include",
    "$hdf_framework_path/ability/sbuf/include",
    "$hdf_uhdf_path/manager/include",
    "$hdf_uhdf_path/include/hdi",

    "$hdf_uhdf_path/devhost/include",
    "$hdf_uhdf_path/devmgr/include",
    "$hdf_uhdf_path/host/include",
  ]

  deps = [
    "$camera_path/buffer_manager:camera_buffer_manager",
    "$camera_path/device_manager:camera_device_manager",
    "$camera_path/hdi_impl:camera_hdi_impl",
    "$camera_path/pipeline_core:camera_pipeline_core",
    "$hdf_uhdf_path/config:libhdf_hcs",
    "$hdf_uhdf_path/hdi:libhdi",
    "$hdf_uhdf_path/osal:libhdf_utils",
    "../../../interfaces/include/client:libcamera_client",
    "//drivers/adapter/uhdf2/host:libhdf_host",
    "//drivers/adapter/uhdf2/ipc:libhdf_ipc_adapter",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/graphic/standard:libsurface",
    "//foundation/multimedia/camera_standard/frameworks/innerkitsimpl/metadata:metadata",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest",
    "//third_party/googletest:gtest_main",
    "//utils/native/base:utils",
  ]

  if (is_standard_system) {
    external_deps = [
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_core",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }

  external_deps += [ "samgr_L2:samgr_proxy" ]
  public_configs = [ ":camhdi_impl_utest_config" ]
}
