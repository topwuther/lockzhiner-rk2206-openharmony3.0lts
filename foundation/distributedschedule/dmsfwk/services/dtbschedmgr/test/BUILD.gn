# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("//build/test.gni")

module_output_path = "dmsfwk/distributedschedsvrtest"

distributed_service = "//foundation/distributedschedule/dmsfwk/services"

dsched_configs =
    [ "${distributed_service}/dtbschedmgr:distributed_sched_config" ]

dsched_deps = [
  "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
  "//foundation/aafwk/standard/interfaces/innerkits/ability_manager:ability_manager",
  "//foundation/aafwk/standard/interfaces/innerkits/base:base",
  "//foundation/aafwk/standard/interfaces/innerkits/want:want",
  "//foundation/appexecfwk/standard/common:libappexecfwk_common",
  "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_base:appexecfwk_base",
  "//foundation/appexecfwk/standard/interfaces/innerkits/appexecfwk_core:appexecfwk_core",
  "//foundation/appexecfwk/standard/interfaces/innerkits/libeventhandler:libeventhandler",
  "//foundation/distributedschedule/safwk/interfaces/innerkits/safwk:system_ability_fwk",
  "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
  "//utils/native/base:utils",
]

dsched_external_deps = [
  "dsoftbus_standard:softbus_client",
  "hiviewdfx_hilog_native:libhilog",
  "ipc:ipc_core",
  "permission_standard:libpermissionsdk_standard",
]

dsched_public_deps = [
  "//third_party/googletest:gtest_main",
  "//third_party/libxml2:libxml2",
]

dtbschedmgr_sources = [
  "${distributed_service}/dtbschedmgr/src/ability_connection_wrapper_proxy.cpp",
  "${distributed_service}/dtbschedmgr/src/ability_connection_wrapper_stub.cpp",
  "${distributed_service}/dtbschedmgr/src/adapter/dnetwork_adapter.cpp",
  "${distributed_service}/dtbschedmgr/src/bundle/bundle_manager_internal.cpp",
  "${distributed_service}/dtbschedmgr/src/connect_death_recipient.cpp",
  "${distributed_service}/dtbschedmgr/src/continuation_callback_death_recipient.cpp",
  "${distributed_service}/dtbschedmgr/src/deviceManager/dms_device_info.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_device_node_listener.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_ability_shell.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_adapter.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_continuation.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_dumper.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_permission.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_proxy.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_service.cpp",
  "${distributed_service}/dtbschedmgr/src/distributed_sched_stub.cpp",
  "${distributed_service}/dtbschedmgr/src/dtbschedmgr_device_info_storage.cpp",
]

ohos_unittest("distributedschedsvrtest") {
  module_out_path = module_output_path

  sources = [ "unittest/distributed_sched_service_test.cpp" ]
  sources += dtbschedmgr_sources
  configs = dsched_configs
  deps = dsched_deps
  if (is_standard_system) {
    external_deps = dsched_external_deps
    public_deps = dsched_public_deps
  }
}

ohos_unittest("dschedcontinuetest") {
  module_out_path = module_output_path

  sources = [
    "unittest/distributed_sched_ability_shell_test.cpp",
    "unittest/distributed_sched_continuation_test.cpp",
    "unittest/mock_distributed_sched.cpp",
  ]
  sources += dtbschedmgr_sources
  configs = dsched_configs
  deps = dsched_deps
  if (is_standard_system) {
    external_deps = dsched_external_deps
    public_deps = dsched_public_deps
  }
}

ohos_unittest("dschedconnecttest") {
  module_out_path = module_output_path

  sources = [ "unittest/distributed_sched_connect_test.cpp" ]
  sources += dtbschedmgr_sources
  configs = dsched_configs
  deps = dsched_deps
  if (is_standard_system) {
    external_deps = dsched_external_deps
    public_deps = dsched_public_deps
  }
}

ohos_unittest("dschedpermissiontest") {
  module_out_path = module_output_path

  sources = [ "unittest/distributed_sched_permission_test.cpp" ]
  sources += dtbschedmgr_sources
  configs = dsched_configs
  deps = dsched_deps
  if (is_standard_system) {
    external_deps = dsched_external_deps
    public_deps = dsched_public_deps
  }
}

group("unittest") {
  testonly = true
  deps = [
    ":distributedschedsvrtest",
    ":dschedconnecttest",
    ":dschedcontinuetest",
    ":dschedpermissiontest",
  ]
}
