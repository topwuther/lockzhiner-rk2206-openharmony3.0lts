# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/communication/dsoftbus/dsoftbus.gni")

config("disc_server_interface") {
  include_dirs = [
    "service/include",
    "interface",
    "manager/include",
    "$dsoftbus_root_path/interfaces/kits/discovery",
    "$dsoftbus_root_path/interfaces/kits/common",
    "$dsoftbus_root_path/core/connection/interface",
  ]
}

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")

  if (ohos_kernel_type == "liteos_m") {
    static_library("dsoftbus_disc_server") {
      sources = [
        "ipc/mini/disc_client_proxy.c",
        "manager/src/disc_manager.c",
        "manager/src/softbus_disc_server.c",
      ]
      include_dirs = [
        "ble/include",
        "coap/include",
        "ipc/include",
        "$dsoftbus_root_path/core/common/include",
        "$dsoftbus_root_path/interfaces/innerkits/discovery",
        "$dsoftbus_root_path/sdk/discovery/manager/include",
        "$dsoftbus_root_path/interfaces/kits/discovery",
        "$dsoftbus_root_path/interfaces/kits/common",
        "$softbus_adapter_common/include",
        "//third_party/bounds_checking_function/include",
        "$hilog_lite_include_path",
      ]
      cflags = [
        "-Wall",
        "-fPIC",
      ]
      public_configs = [ ":disc_server_interface" ]
      deps = [
        "$dsoftbus_root_path/adapter:softbus_adapter",
        "$dsoftbus_root_path/core/common/log:softbus_log",
        "$dsoftbus_root_path/core/common/utils:softbus_utils",
        "$hilog_lite_deps_path",
        "ble:ble_discovery",
        "coap:dsoftbus_disc_coap",
      ]
    }
  } else {
    shared_library("dsoftbus_disc_server") {
      sources = [
        "ipc/small/disc_client_proxy.c",
        "manager/src/disc_manager.c",
        "manager/src/softbus_disc_server.c",
      ]
      include_dirs = [
        "ble/include",
        "coap/include",
        "ipc/include",
        "$dsoftbus_root_path/core/common/include",
        "$dsoftbus_root_path/core/common/inner_communication",
        "$dsoftbus_root_path/interfaces/innerkits/discovery",
        "$softbus_adapter_common/include",
        "//third_party/bounds_checking_function/include",
        "$hilog_lite_include_path",
      ]
      cflags = [
        "-Wall",
        "-fPIC",
      ]
      public_configs = [ ":disc_server_interface" ]
      deps = [
        "$dsoftbus_root_path/adapter:softbus_adapter",
        "$dsoftbus_root_path/core/common/log:softbus_log",
        "$dsoftbus_root_path/core/common/utils:softbus_utils",
        "$dsoftbus_root_path/core/frame/small/client_manager:client_manager",
        "$hilog_lite_deps_path",
        "ble:ble_discovery",
        "coap:dsoftbus_disc_coap",
        "//foundation/communication/ipc_lite:liteipc_adapter",
        "//third_party/bounds_checking_function:libsec_shared",
      ]
    }
  }
} else {
  import("//build/ohos.gni")

  ohos_shared_library("dsoftbus_disc_server") {
    include_dirs = [
      "ble/include",
      "coap/include",
      "ipc/include",
      "ipc/standard/include",
      "$dsoftbus_root_path/core/common/include",
      "$softbus_adapter_common/include",
      "$dsoftbus_root_path/core/frame/standard/client/include",
      "$dsoftbus_root_path/core/frame/standard/softbusdata/include",
      "//utils/system/safwk/native/include",
    ]

    sources = [
      "ipc/standard/src/disc_client_proxy.cpp",
      "ipc/standard/src/disc_client_proxy_standard.cpp",
      "manager/src/disc_manager.c",
      "manager/src/softbus_disc_server.c",
    ]

    public_configs = [ ":disc_server_interface" ]
    if (is_standard_system) {
      external_deps = [
        "hiviewdfx_hilog_native:libhilog",
        "ipc:ipc_core",
      ]
    }
    deps = [
      "$dsoftbus_root_path/adapter:softbus_adapter",
      "$dsoftbus_root_path/core/common/log:softbus_log",
      "$dsoftbus_root_path/core/common/utils:softbus_utils",
      "$dsoftbus_root_path/core/frame/standard/softbusdata:softbus_server_data",
      "ble:ble_discovery",
      "coap:dsoftbus_disc_coap",
      "//utils/native/base:utils",
    ]
    part_name = "dsoftbus_standard"
    subsystem_name = "communication"
  }
}
