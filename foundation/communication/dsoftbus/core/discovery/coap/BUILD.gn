# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/communication/dsoftbus/dsoftbus.gni")

config("discovery_coap_config") {
  cflags = [ "-Wno-error" ]
}

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")

  if (enable_discovery_coap == true) {
    sources_coap = [
      "src/disc_coap.c",
      "src/disc_nstackx_adapter.c",
    ]
    deps_coap = [
      "$dsoftbus_root_path/adapter:softbus_adapter",
      "$dsoftbus_root_path/core/bus_center/lnn/net_ledger:dsoftbus_bus_center_ledger",
      "$dsoftbus_root_path/core/common/json_utils:json_utils",
      "$dsoftbus_root_path/core/common/log:softbus_log",
      "$hilog_lite_deps_path",
    ]
  } else {
    sources_coap = [ "src/disc_coap_virtual.c" ]
    deps_coap = []
  }

  if (ohos_kernel_type == "liteos_m") {
    static_library("dsoftbus_disc_coap") {
      sources = sources_coap
      include_dirs = [
        "include",
        "$softbus_adapter_common/include",
        "$dsoftbus_root_path/core/bus_center/interface",
        "$dsoftbus_root_path/core/common/include",
        "$dsoftbus_root_path/core/discovery/interface",
        "$dsoftbus_root_path/core/discovery/manager/include",
        "$dsoftbus_root_path/interfaces/kits/bus_center",
        "$dsoftbus_root_path/interfaces/kits/common",
        "$dsoftbus_root_path/interfaces/kits/discovery",
        "//third_party/bounds_checking_function/include",
        "//third_party/cJSON",
        "$hilog_lite_include_path",
      ]
      cflags = [
        "-Wall",
        "-fPIC",
        "-std=c99",
      ]
      deps = deps_coap
      deps += [
        "$dsoftbus_root_path/components/nstackx_mini/nstackx_ctrl:nstackx_ctrl",
      ]
    }
  } else {
    shared_library("dsoftbus_disc_coap") {
      sources = sources_coap
      include_dirs = [
        "include",
        "$softbus_adapter_common/include",
        "$dsoftbus_root_path/core/bus_center/interface",
        "$dsoftbus_root_path/core/common/include",
        "$dsoftbus_root_path/core/discovery/interface",
        "$dsoftbus_root_path/core/discovery/manager/include",
        "$dsoftbus_root_path/interfaces/kits/bus_center",
        "$dsoftbus_root_path/interfaces/kits/common",
        "$dsoftbus_root_path/interfaces/kits/discovery",
        "//third_party/bounds_checking_function/include",
        "//third_party/cJSON",
        "$hilog_lite_include_path",
      ]
      cflags = [
        "-Wall",
        "-fPIC",
        "-std=c99",
      ]

      deps = deps_coap
      deps += [
        "$dsoftbus_root_path/components/nstackx/nstackx_ctrl:nstackx_ctrl",
        "//third_party/bounds_checking_function:libsec_shared",
      ]
    }
  }
} else {
  import("//build/ohos.gni")

  if (enable_discovery_coap == true) {
    sources_coap = [
      "src/disc_coap.c",
      "src/disc_nstackx_adapter.c",
    ]
  } else {
    sources_coap = [ "src/disc_coap_virtual.c" ]
  }

  ohos_shared_library("dsoftbus_disc_coap") {
    sources = sources_coap
    include_dirs = [
      "include",
      "$softbus_adapter_common/include",
      "$dsoftbus_root_path/core/bus_center/interface",
      "$dsoftbus_root_path/core/common/include",
      "$dsoftbus_root_path/core/discovery/interface",
      "$dsoftbus_root_path/core/discovery/manager/include",
      "$dsoftbus_root_path/interfaces/kits/bus_center",
      "$dsoftbus_root_path/interfaces/kits/common",
      "$dsoftbus_root_path/interfaces/kits/discovery",
      "//third_party/cJSON",
    ]

    deps = [
      "$dsoftbus_root_path/adapter:softbus_adapter",
      "$dsoftbus_root_path/components/nstackx/nstackx_ctrl:nstackx_ctrl",
      "$dsoftbus_root_path/core/bus_center/lnn/net_ledger:dsoftbus_bus_center_ledger",
      "$dsoftbus_root_path/core/common/json_utils:json_utils",
      "$dsoftbus_root_path/core/common/log:softbus_log",
    ]
    configs = [ ":discovery_coap_config" ]
    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }
    part_name = "dsoftbus_standard"
    subsystem_name = "communication"
  }
}
