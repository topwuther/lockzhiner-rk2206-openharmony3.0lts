# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/communication/dsoftbus/dsoftbus.gni")

config("trans_session_manager_sdk_interface") {
  include_dirs = [
    "session/include",
    "trans_channel/manager/include",
    "$dsoftbus_root_path/interfaces/kits/transport",
    "$dsoftbus_root_path/core/connection/interface",
  ]
}

common_include = [
  "$dsoftbus_root_path/interfaces/kits/transport",
  "$dsoftbus_core_path/common/include",
  "$dsoftbus_root_path/core/transmission/common/include",
  "$softbus_adapter_common/include",
  "$dsoftbus_root_path/interfaces/kits/transport",
  "$dsoftbus_root_path/interfaces/kits/bus_center",
  "$dsoftbus_root_path/interfaces/kits/common",
  "$dsoftbus_sdk_path/bus_center/manager/include",
  "$dsoftbus_sdk_path/transmission/trans_channel/auth/include",
]

common_src = [
  "session/src/client_trans_session_callback.c",
  "session/src/client_trans_session_manager.c",
  "trans_channel/manager/src/client_trans_channel_callback.c",
  "trans_channel/manager/src/client_trans_channel_manager.c",
]

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")

  common_include += [
    "$libsec_include_path",
    "$hilog_lite_include_path",
  ]

  common_deps = [
    "$dsoftbus_core_path/common/utils:softbus_utils",
    "$dsoftbus_root_path/adapter:softbus_adapter",
    "$dsoftbus_root_path/core/common/log:softbus_log",
    "$dsoftbus_sdk_path/bus_center:dsoftbus_bus_center_manager_sdk",
    "$dsoftbus_sdk_path/transmission/ipc:dsoftbus_trans_ipc_proxy_sdk",
    "$dsoftbus_sdk_path/transmission/trans_channel/auth:dsoftbus_trans_auth_channel_sdk",
    "$dsoftbus_sdk_path/transmission/trans_channel/proxy:dsoftbus_trans_proxy_channel_sdk",
    "$dsoftbus_sdk_path/transmission/trans_channel/tcp_direct:dsoftbus_trans_direct_channel_sdk",
    "$dsoftbus_sdk_path/transmission/trans_channel/udp:dsoftbus_trans_udp_channel_sdk",
  ]

  if (ohos_kernel_type == "liteos_m") {
    static_library("dsoftbus_trans_session_manager_sdk") {
      include_dirs = common_include
      include_dirs += [
        "$dsoftbus_sdk_path/transmission/ipc/include",
        "$dsoftbus_sdk_path/transmission/trans_channel/proxy/include",
        "$dsoftbus_sdk_path/transmission/trans_channel/tcp_direct/include",
        "$dsoftbus_root_path/core/common/security/sequence_verification/include",
        "$dsoftbus_sdk_path/transmission/trans_channel/udp/common/include",
      ]
      sources = common_src
      public_configs = [ ":trans_session_manager_sdk_interface" ]
      deps = common_deps
    }
  } else {
    shared_library("dsoftbus_trans_session_manager_sdk") {
      include_dirs = common_include
      cflags = [
        "-Wall",
        "-fPIC",
      ]
      sources = common_src
      public_configs = [ ":trans_session_manager_sdk_interface" ]
      deps = common_deps
      deps += [
        "$hilog_lite_deps_path",
        "$libsec_deps_path",
      ]
    }
  }
} else {
  import("//build/ohos.gni")

  ohos_shared_library("dsoftbus_trans_session_manager_sdk") {
    include_dirs = common_include
    sources = common_src
    public_configs = [ ":trans_session_manager_sdk_interface" ]
    public_deps = [
      "$dsoftbus_root_path/adapter:softbus_adapter",
      "$dsoftbus_root_path/core/common/utils:softbus_utils",
      "$dsoftbus_sdk_path/bus_center:dsoftbus_bus_center_manager_sdk",
      "$dsoftbus_sdk_path/transmission/ipc:dsoftbus_trans_ipc_proxy_sdk",
      "$dsoftbus_sdk_path/transmission/trans_channel/auth:dsoftbus_trans_auth_channel_sdk",
      "$dsoftbus_sdk_path/transmission/trans_channel/proxy:dsoftbus_trans_proxy_channel_sdk",
      "$dsoftbus_sdk_path/transmission/trans_channel/tcp_direct:dsoftbus_trans_direct_channel_sdk",
      "$dsoftbus_sdk_path/transmission/trans_channel/udp:dsoftbus_trans_udp_channel_sdk",
      "//utils/native/base:utilsecurec_shared",
    ]
    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }
    part_name = "dsoftbus_standard"
    subsystem_name = "communication"
  }
}
