# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/communication/dsoftbus/dsoftbus.gni")

common_src = [
  "src/client_trans_message_service.c",
  "src/client_trans_session_service.c",
]

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")

  common_include = [
    "include",
    "$softbus_adapter_common/include",
    "$dsoftbus_core_path/common/include",
    "$dsoftbus_root_path/core/common/softbus_property/include",
    "$dsoftbus_root_path/core/transmission/common/include",
    "$dsoftbus_root_path/interfaces/inner_kits/transport",
    "$dsoftbus_root_path/interfaces/kits/transport",
    "$dsoftbus_root_path/interfaces/kits/common",
    "$dsoftbus_sdk_path/frame/common/include",
    "$libsec_include_path",
    "$hilog_lite_include_path",
    "//third_party/cJSON",
    "$dsoftbus_root_path/sdk/transmission/trans_channel/udp/file/include",
  ]

  common_deps = [
    "$dsoftbus_core_path/common/utils:softbus_utils",
    "$dsoftbus_root_path/adapter:softbus_adapter",
    "$dsoftbus_root_path/core/common/json_utils:json_utils",
    "$dsoftbus_root_path/core/common/log:softbus_log",
    "$dsoftbus_root_path/core/common/softbus_property:softbus_property",
    "$dsoftbus_sdk_path/frame:softbus_client_frame",
    "$dsoftbus_sdk_path/transmission:dsoftbus_trans_session_manager_sdk",
    "$dsoftbus_sdk_path/transmission/ipc:dsoftbus_trans_ipc_proxy_sdk",
  ]

  if (ohos_kernel_type == "liteos_m") {
    static_library("dsoftbus_trans_session_sdk") {
      include_dirs = common_include
      include_dirs += [
        "$dsoftbus_root_path/sdk/transmission/trans_channel/manager/include",
        "$dsoftbus_root_path/sdk/transmission/ipc/include",
      ]
      sources = common_src
      deps = common_deps
    }
  } else {
    shared_library("dsoftbus_trans_session_sdk") {
      include_dirs = common_include
      cflags = [
        "-Wall",
        "-fPIC",
      ]
      sources = common_src
      deps = common_deps
      deps += [
        "$hilog_lite_deps_path",
        "$libsec_deps_path",
      ]
    }
  }
} else {
  import("//build/ohos.gni")
  config("trans_session_sdk_interface") {
    include_dirs = [
      "$dsoftbus_root_path/core/common/softbus_property/include",
      "$dsoftbus_root_path/core/transmission/common/include",
      "$dsoftbus_root_path/interfaces/inner_kits/transport",
      "$dsoftbus_root_path/interfaces/kits/transport",
      "$dsoftbus_root_path/sdk/transmission/session/cpp/include",
      "$dsoftbus_root_path/interfaces/kits/bus_center",
      "$dsoftbus_root_path/interfaces/kits/common",
      "$dsoftbus_root_path/sdk/transmission/trans_channel/udp/file/include",
    ]
  }

  ohos_shared_library("dsoftbus_trans_session_sdk") {
    include_dirs = [
      "include",
      "$softbus_adapter_common/include",
      "$dsoftbus_core_path/common/include",
      "$dsoftbus_sdk_path/frame/common/include",
    ]

    sources = [
      "$dsoftbus_root_path/sdk/transmission/session/cpp/src/session_callback_mock.cpp",
      "$dsoftbus_root_path/sdk/transmission/session/cpp/src/session_impl.cpp",
      "$dsoftbus_root_path/sdk/transmission/session/cpp/src/session_mock.cpp",
      "$dsoftbus_root_path/sdk/transmission/session/cpp/src/session_service_impl.cpp",
    ]
    sources += common_src
    deps = [
      "$dsoftbus_root_path/core/common/json_utils:json_utils",
      "$dsoftbus_root_path/core/common/log:softbus_log",
      "$dsoftbus_root_path/core/common/softbus_property:softbus_property",
      "$dsoftbus_root_path/core/common/utils:softbus_utils",
      "$dsoftbus_sdk_path/bus_center/service:dsoftbus_bus_center_service_sdk",
      "$dsoftbus_sdk_path/frame:softbus_client_frame",
      "$dsoftbus_sdk_path/transmission:dsoftbus_trans_session_manager_sdk",
      "$dsoftbus_sdk_path/transmission/ipc:dsoftbus_trans_ipc_proxy_sdk",
      "//utils/native/base:utilsecurec_shared",
    ]
    public_configs = [ ":trans_session_sdk_interface" ]
    if (is_standard_system) {
      external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
    }
    part_name = "dsoftbus_standard"
    subsystem_name = "communication"
  }
}
